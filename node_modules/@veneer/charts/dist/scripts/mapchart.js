'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _highcharts = require('./utils/highcharts');

var _highcharts2 = _interopRequireDefault(_highcharts);

var _chart = require('./chart');

var _chart2 = _interopRequireDefault(_chart);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorPalette = _chart2.default.ColorPalette;

var MapChart = function (_Chart) {
  _inherits(MapChart, _Chart);

  function MapChart(props) {
    _classCallCheck(this, MapChart);

    var _this = _possibleConstructorReturn(this, (MapChart.__proto__ || Object.getPrototypeOf(MapChart)).call(this, props));

    _this.colors = ColorPalette.categories;

    _highcharts2.default.Highmaps.setOptions(_highcharts2.default.theme = {
      chart: {
        style: {
          fontFamily: '"HP Simplified Light", Arial, sans-serif'
        }
      }
    });
    return _this;
  }

  _createClass(MapChart, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var newOptions = _extends({
        colors: ColorPalette.categories
      }, this.props.options);
      this.chart = new _highcharts2.default.Highmaps.Map(this.container, newOptions);
    }
  }]);

  return MapChart;
}(_chart2.default);

MapChart.propTypes = {
  options: _propTypes2.default.shape({
    chart: _propTypes2.default.object,
    title: _propTypes2.default.object,
    map: _propTypes2.default.object,
    series: _propTypes2.default.array,
    tooltip: _propTypes2.default.object,
    drilldown: _propTypes2.default.object
  }).isRequired
};

MapChart.displayName = 'Map Chart';

exports.default = MapChart;
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _core = require('@veneer/core');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableContent = function (_React$Component) {
  _inherits(TableContent, _React$Component);

  function TableContent(props) {
    _classCallCheck(this, TableContent);

    var _this = _possibleConstructorReturn(this, (TableContent.__proto__ || Object.getPrototypeOf(TableContent)).call(this, props));

    _this.state = {
      stateKey: 0
    };
    return _this;
  }

  _createClass(TableContent, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          rowId = _props.rowId,
          actionButton = _props.actionButton,
          hover = _props.hover,
          type = _props.type,
          value = _props.value,
          expandable = _props.expandable;

      var hasMenuButton = type === 'menu' && actionButton.length > 0 && hover;
      var contentClassName = (0, _classnames2.default)({
        'vn-tablecell__content': true,
        'vn-tablecell__content--with-menu-button': hasMenuButton
      });

      var contentContainerClasseName = (0, _classnames2.default)({
        'vn-tablecell--expand': expandable
      });

      return _react2.default.createElement(
        'div',
        { className: contentContainerClasseName },
        _react2.default.createElement(
          'div',
          { className: contentClassName },
          value
        ),
        hasMenuButton && _react2.default.createElement(
          'div',
          { className: 'vn-tablecell__menu-button' },
          _react2.default.createElement(
            _core.DropdownIcon,
            { icon: 'more', transparent: true, className: 'vn-tablecell__menu-button-dropdown-icon' },
            actionButton.map(function (action) {
              return _react2.default.createElement(_core.DropdownIconAction, {
                key: action.label,
                label: action.label,
                onClick: function onClick() {
                  return action.func(rowId);
                }
              });
            })
          )
        )
      );
    }
  }]);

  return TableContent;
}(_react2.default.Component);

TableContent.propTypes = {
  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.element]),
  type: _propTypes2.default.oneOf(['edition', 'menu']),
  rowId: _propTypes2.default.string.isRequired,
  hover: _propTypes2.default.bool,
  expandable: _propTypes2.default.bool,
  actionButton: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    label: _propTypes2.default.string.isRequired,
    func: _propTypes2.default.func.isRequired
  }))
};

TableContent.defaultProps = {
  value: '',
  type: 'textbox',
  hover: false,
  expandable: false,
  actionButton: [],
  rowId: ''
};

TableContent.displayName = 'TableContent';

exports.default = TableContent;
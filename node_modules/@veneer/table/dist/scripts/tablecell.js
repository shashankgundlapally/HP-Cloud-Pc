'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _core = require('@veneer/core');

require('../css/tablecell.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var TableCell = function TableCell(_ref) {
  var _classnames;

  var actionButton = _ref.actionButton,
      isExpanded = _ref.isExpanded,
      expandable = _ref.expandable,
      children = _ref.children,
      hover = _ref.hover,
      onExpand = _ref.onExpand,
      rowId = _ref.rowId,
      selectionPosition = _ref.selectionPosition;

  var childrenClass = (0, _classnames3.default)((_classnames = {
    'vn-tablecell': true,
    'vn-tablecell--highlighted': hover === true || selectionPosition !== 'none'
  }, _defineProperty(_classnames, 'vn-tablecell--highlighted-' + selectionPosition, true), _defineProperty(_classnames, 'vn-tablecell__actionbutton', actionButton.length > 0), _classnames));

  var arrowClasses = (0, _classnames3.default)({
    'vn-tablerow__arrow-icon': true,
    'vn-tablerow__arrow-icon--expanded': isExpanded
  });

  var tableContent = void 0;
  if (children.type.displayName === 'TableContent') {
    tableContent = (0, _react.cloneElement)(children, { hover: hover, rowId: rowId });
  } else {
    tableContent = children;
  }

  return _react2.default.createElement(
    'td',
    { className: childrenClass },
    tableContent,
    expandable && _react2.default.createElement(
      'div',
      { style: { width: '25px', display: 'inline-block' } },
      _react2.default.createElement(_core.Icon, {
        className: arrowClasses,
        name: 'arrow',
        onClick: function onClick() {
          return onExpand(rowId);
        },
        role: 'button',
        tabIndex: 0
      })
    )
  );
};

TableCell.propTypes = {
  actionButton: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    label: _propTypes2.default.string.isRequired,
    func: _propTypes2.default.func.isRequired
  })),
  children: _propTypes2.default.node.isRequired,
  expandable: _propTypes2.default.bool,
  hover: _propTypes2.default.bool,
  isExpanded: _propTypes2.default.bool,
  onExpand: _propTypes2.default.func,
  rowId: _propTypes2.default.string,
  selectionPosition: _propTypes2.default.string
};

TableCell.defaultProps = {
  actionButton: [],
  expandable: false,
  hover: false,
  isExpanded: false,
  onExpand: function onExpand() {},
  rowId: undefined,
  selectionPosition: 'none'
};

TableCell.displayName = 'TableCell';

exports.default = TableCell;
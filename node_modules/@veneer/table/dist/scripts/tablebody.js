'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _core = require('@veneer/core');

var _tablerow = require('./tablerow');

var _tablerow2 = _interopRequireDefault(_tablerow);

var _tablerowdetails = require('./tablerowdetails');

var _tablerowdetails2 = _interopRequireDefault(_tablerowdetails);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableBody = function (_React$Component) {
  _inherits(TableBody, _React$Component);

  function TableBody(props) {
    _classCallCheck(this, TableBody);

    var _this = _possibleConstructorReturn(this, (TableBody.__proto__ || Object.getPrototypeOf(TableBody)).call(this, props));

    _this.onSelect = function (row, selected) {
      _this.props.onSelect(row, selected);
    };

    _this.onExpand = function (row) {
      var expandedList = _this.state.expandedRows;

      if (expandedList.includes(row)) {
        expandedList = expandedList.filter(function (r) {
          return r !== row;
        });
      } else {
        expandedList.push(row);
      }

      _this.setState({
        expandedRows: expandedList
      });
    };

    _this.getRowPosition = function (rowData, previousRowData, nextRowData) {
      var currentRowSelected = rowData.selected;
      var previousRowSelected = previousRowData ? previousRowData.selected : false;
      var nextRowSelected = nextRowData ? nextRowData.selected : false;

      var currentSelected = 'none';

      if (currentRowSelected) {
        currentSelected = 'lonely';

        if (previousRowSelected) {
          currentSelected = 'last';
        }

        if (previousRowSelected && nextRowSelected) {
          currentSelected = 'middle';
        }

        if (!previousRowSelected && nextRowSelected) {
          currentSelected = 'first';
        }
      }

      return currentSelected;
    };

    _this.state = {
      expandedRows: []
    };
    return _this;
  }

  _createClass(TableBody, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          columnsOrder = _props.columnsOrder,
          config = _props.config,
          data = _props.data,
          i18n = _props.i18n,
          idColumn = _props.idColumn,
          loading = _props.loading,
          selectionColumn = _props.selectionColumn;


      var hasRowSelected = data.filter(function (rowData) {
        return rowData.selected;
      }).length > 0;
      var verifiedSelectionColumn = selectionColumn === 'image' && !hasRowSelected ? 'image' : 'checkbox';

      var renderItems = [];
      data.map(function (rowData, index) {
        var isRowExpanded = _this2.state.expandedRows.includes(rowData[idColumn]);
        var isRowOdd = index % 2 !== 0;

        renderItems.push(_react2.default.createElement(_tablerow2.default, {
          columnsOrder: columnsOrder,
          config: config,
          idColumn: idColumn,
          isExpanded: isRowExpanded,
          isOdd: isRowOdd,
          key: rowData[idColumn],
          onSelect: _this2.onSelect,
          onExpand: _this2.onExpand,
          rowData: rowData,
          selectionColumn: selectionColumn ? verifiedSelectionColumn : undefined,
          selectionPosition: _this2.getRowPosition(rowData, data[index - 1], data[index + 1])
        }));
        if (isRowExpanded) {
          renderItems.push(_react2.default.createElement(_tablerowdetails2.default, {
            columns: config.length + (selectionColumn ? 1 : 0),
            content: rowData.details
          }));
        }
        return renderItems;
      });

      return _react2.default.createElement(
        'tbody',
        null,
        loading && _react2.default.createElement(
          'tr',
          { className: 'vn-tablerow' },
          _react2.default.createElement(
            'td',
            {
              className: 'vn-tablecell--loading',
              colSpan: config.length + (selectionColumn ? 1 : 0),
              style: { height: data.length * 56 - 40, paddingTop: 40 }
            },
            _react2.default.createElement(_core.Spinner, { iconSize: 48 })
          )
        ),
        !loading && data.length === 0 && _react2.default.createElement(
          'tr',
          { className: 'vn-tablerow' },
          _react2.default.createElement(
            'td',
            {
              className: 'vn-tablecell vn-tablecell--no-items',
              colSpan: config.length + (selectionColumn ? 1 : 0)
            },
            i18n.noItems
          )
        ),
        !loading && data.length > 0 && renderItems
      );
    }
  }]);

  return TableBody;
}(_react2.default.Component);

TableBody.propTypes = {
  columnsOrder: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired,
  config: _propTypes2.default.arrayOf(_propTypes2.default.object),
  data: _propTypes2.default.arrayOf(_propTypes2.default.object).isRequired,
  i18n: _propTypes2.default.shape({
    noItems: _propTypes2.default.string.isRequired
  }),
  idColumn: _propTypes2.default.string.isRequired,
  loading: _propTypes2.default.bool,
  onSelect: _propTypes2.default.func,
  selectionColumn: _propTypes2.default.oneOf(['checkbox', 'image'])
};

TableBody.defaultProps = {
  config: [],
  onSelect: function onSelect() {},
  i18n: {
    noItems: 'No items available'
  },
  loading: false,
  selectionColumn: undefined
};

TableBody.displayName = 'TableBody';

exports.default = TableBody;
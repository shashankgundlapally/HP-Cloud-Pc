'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _arrayPrototype = require('array.prototype.findindex');

var _arrayPrototype2 = _interopRequireDefault(_arrayPrototype);

var _core = require('@veneer/core');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _tablebody = require('./tablebody');

var _tablebody2 = _interopRequireDefault(_tablebody);

var _tableheader = require('./tableheader');

var _tableheader2 = _interopRequireDefault(_tableheader);

require('../css/table.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_arrayPrototype2.default.shim();

var Table = function (_React$Component) {
  _inherits(Table, _React$Component);

  function Table() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Table);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Table.__proto__ || Object.getPrototypeOf(Table)).call.apply(_ref, [this].concat(args))), _this), _this.onBodySelect = function (rowId, selected) {
      var _this$props = _this.props,
          config = _this$props.config,
          data = _this$props.data;

      var selectIndex = data.findIndex(function (item) {
        return item[config.idColumn] === rowId;
      });

      if (selected) {
        _this.props.onSelect(selectIndex);
      } else {
        _this.props.onDeselect(selectIndex);
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Table, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          config = _props.config,
          data = _props.data,
          loading = _props.loading,
          onSelectAllItems = _props.onSelectAllItems,
          onSelectAllPage = _props.onSelectAllPage,
          onSort = _props.onSort,
          onFilter = _props.onFilter,
          preferences = _props.preferences,
          selectAllItems = _props.selectAllItems;
      var selectionColumn = config.selectionColumn,
          i18n = config.i18n;


      var visibleColumns = preferences ? preferences.visibleColumns : config.columns.filter(function (column) {
        return column.configurable === undefined || column.configurable;
      }).map(function (filteredColumn) {
        return filteredColumn.column;
      });

      var filteredColumns = config.columns.filter(function (column) {
        return visibleColumns.indexOf(column.column) !== -1;
      });

      var pagination = this.props.children;
      var dataLength = data.length;

      var everyRowIsSelected = dataLength > 0 && data.filter(function (item) {
        return item.selected;
      }).length === dataLength;

      var columnsOrder = preferences ? preferences.columnsOrder : config.columns.map(function (column) {
        return column.column;
      });

      var showFilters = preferences ? preferences.showFilters : undefined;

      var sortBy = preferences ? preferences.sortBy : undefined;

      var totalItems = 0;

      if (pagination) {
        totalItems = pagination.props.totalItems;
      }

      var paginationClassName = (0, _classnames2.default)({
        'vn-table__pagination': true,
        'vn-table__pagination--loading': loading === true
      });

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            'table',
            { className: 'vn-table' },
            _react2.default.createElement(_tableheader2.default, {
              columnsOrder: columnsOrder,
              config: filteredColumns,
              i18n: i18n,
              loading: loading,
              numberOfPageItems: dataLength,
              onFilter: onFilter,
              onSelectAllItems: onSelectAllItems,
              onSelectAllPage: onSelectAllPage,
              onSort: onSort,
              selectAllItems: selectAllItems,
              selectAllPage: everyRowIsSelected,
              selectionColumn: !!selectionColumn,
              showFilters: showFilters,
              sortBy: sortBy,
              totalItems: totalItems
            }),
            _react2.default.createElement(_tablebody2.default, {
              columnsOrder: columnsOrder,
              config: filteredColumns,
              data: data,
              i18n: i18n,
              idColumn: config.idColumn,
              loading: loading,
              onSelect: this.onBodySelect,
              selectionColumn: selectionColumn
            })
          )
        ),
        _react2.default.createElement(
          'div',
          { className: paginationClassName },
          loading === false && pagination
        )
      );
    }
  }]);

  return Table;
}(_react2.default.Component);

Table.propTypes = {
  children: function children(props, propName, componentName) {
    var prop = props[propName];
    if (prop && (_react2.default.Children.count(prop) !== 1 || prop.type !== _core.Pagination)) {
      return new Error('`' + componentName + '` should have a single child of type Pagination.');
    }
    return undefined;
  },
  config: _propTypes2.default.shape({
    columns: _propTypes2.default.arrayOf(_propTypes2.default.shape({
      actionButton: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        func: _propTypes2.default.func.isRequired,
        label: _propTypes2.default.string.isRequired
      })),
      column: _propTypes2.default.string.isRequired,
      configurable: _propTypes2.default.bool,
      filter: _propTypes2.default.shape({
        type: _propTypes2.default.string.isRequired,
        options: _propTypes2.default.arrayOf(_propTypes2.default.object)
      }),
      sortable: _propTypes2.default.bool,
      title: _propTypes2.default.string.isRequired,
      width: _propTypes2.default.string
    })).isRequired,
    i18n: _propTypes2.default.shape({
      allItemsSelected: _propTypes2.default.string.isRequired,
      allPageSelected: _propTypes2.default.string.isRequired,
      clearSelection: _propTypes2.default.string.isRequired,
      noItems: _propTypes2.default.string.isRequired,
      selectAllItems: _propTypes2.default.string.isRequired
    }),
    idColumn: _propTypes2.default.string.isRequired,
    selectionColumn: _propTypes2.default.oneOf(['checkbox', 'image'])
  }).isRequired,
  data: _propTypes2.default.arrayOf(_propTypes2.default.object).isRequired,
  loading: _propTypes2.default.bool,
  onDeselect: _propTypes2.default.func,
  onFilter: _propTypes2.default.func,
  onSelect: _propTypes2.default.func,
  onSelectAllItems: _propTypes2.default.func,
  onSelectAllPage: _propTypes2.default.func,
  onSort: _propTypes2.default.func,
  preferences: _propTypes2.default.shape({
    columnsOrder: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired,
    showFilters: _propTypes2.default.bool,
    sortBy: _propTypes2.default.shape({
      column: _propTypes2.default.string.isRequired,
      type: _propTypes2.default.oneOf(['ASC', 'DESC']).isRequired
    }),
    visibleColumns: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired
  }),
  selectAllItems: _propTypes2.default.bool
};

Table.defaultProps = {
  children: undefined,
  loading: false,
  onFilter: function onFilter() {},
  onDeselect: function onDeselect() {},
  onSelect: function onSelect() {},
  onSelectAllItems: undefined,
  onSelectAllPage: undefined,
  onSort: undefined,
  preferences: undefined,
  selectAllItems: false
};

Table.displayName = 'Table';

exports.default = Table;
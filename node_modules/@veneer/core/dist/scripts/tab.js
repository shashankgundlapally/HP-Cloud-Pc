'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tabs = exports.Tab = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('../css/tab.css');

var _colors = require('./utils/colors');

var _colors2 = _interopRequireDefault(_colors);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var Tab = function Tab(_ref) {
  var active = _ref.active,
      title = _ref.title,
      color = _ref.color,
      theme = _ref.theme,
      other = _objectWithoutProperties(_ref, ['active', 'title', 'color', 'theme']);

  var classes = void 0;
  if (active && theme === 'tab') {
    classes = (0, _classnames2.default)('vn-tabs__tab', 'vn-tabs__tab--active', 'vn-background-color--' + color, 'vn-border-bottom-color--' + color);
  } else if (active) {
    classes = (0, _classnames2.default)('vn-tabs__tab', 'vn-tabs__tab--active', 'vn-border-bottom-color--white');
  } else {
    classes = (0, _classnames2.default)('vn-tabs__tab');
  }

  return _react2.default.createElement(
    'a',
    _extends({}, other, {
      className: classes,
      role: 'tab',
      tabIndex: 0
    }),
    title
  );
};

Tab.displayName = 'Tab';

Tab.propTypes = {
  active: _propTypes2.default.bool,
  onClick: _propTypes2.default.func,
  onKeyPress: _propTypes2.default.func,
  title: _propTypes2.default.string.isRequired,
  color: _propTypes2.default.string,
  theme: _propTypes2.default.string
};

Tab.defaultProps = {
  active: false,
  onClick: function onClick() {},
  onKeyPress: function onKeyPress() {},
  color: _colors2.default.white,
  theme: 'tab'
};

var backgroundColors = [_colors2.default.white, _colors2.default.grayLighter];

var Tabs = function (_React$Component) {
  _inherits(Tabs, _React$Component);

  function Tabs(props) {
    _classCallCheck(this, Tabs);

    var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));

    _this.handleTabClick = function (index, event) {
      event.preventDefault();
      _this.setState({ activeTabIndex: index });
    };

    _this.handleTabKeyPress = function (index, event) {
      if (event.which === 13) {
        event.preventDefault();
        _this.setState({ activeTabIndex: index });
      }
    };

    var activeTabIndex = props.activeTabIndex;

    _this.state = {
      activeTabIndex: activeTabIndex
    };
    return _this;
  }

  _createClass(Tabs, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var activeTabIndex = nextProps.activeTabIndex;

      this.setState({ activeTabIndex: activeTabIndex });
    }
  }, {
    key: 'render',
    value: function render() {
      var _classNames,
          _this2 = this;

      var _props = this.props,
          children = _props.children,
          mountAllTabContents = _props.mountAllTabContents,
          theme = _props.theme;

      var isValidColor = theme === 'tab' && backgroundColors.includes(this.props.color);
      var color = isValidColor ? this.props.color : _colors2.default.white;
      var activeTabIndex = this.state.activeTabIndex;

      var className = (0, _classnames2.default)((_classNames = {
        'vn-tabs': true
      }, _defineProperty(_classNames, 'vn-tabs--' + this.props.theme + '-theme', true), _defineProperty(_classNames, this.props.className, this.props.className), _classNames));
      return _react2.default.createElement(
        'div',
        { className: className, role: 'tablist' },
        _react2.default.createElement(
          'nav',
          null,
          _react.Children.map(children, function (tab, index) {
            var active = index === activeTabIndex;
            var onClick = function onClick(e) {
              tab.props.onClick(e);
              _this2.handleTabClick(index, e);
            };
            var onKeyPress = function onKeyPress(e) {
              tab.props.onKeyPress(e);
              _this2.handleTabKeyPress(index, e);
            };
            return (0, _react.cloneElement)(tab, {
              active: active,
              onClick: onClick,
              onKeyPress: onKeyPress,
              color: color,
              theme: theme
            });
          })
        ),
        _react.Children.map(children, function (tab, index) {
          var active = index === activeTabIndex;
          var contentClassName = (0, _classnames2.default)(_defineProperty({
            'vn-tabs__content': !isValidColor,
            'vn-tabs__content--hidden': !active
          }, 'vn-border-color--' + color, isValidColor));
          return (active || mountAllTabContents) && _react2.default.createElement(
            'div',
            { className: contentClassName, role: 'tabpanel', hidden: !active },
            tab.props.children
          );
        })
      );
    }
  }]);

  return Tabs;
}(_react2.default.Component);

Tabs.displayName = 'Tabs';

Tabs.propTypes = {
  activeTabIndex: _propTypes2.default.number.isRequired,
  children: _propTypes2.default.arrayOf(_propTypes2.default.element).isRequired,
  className: _propTypes2.default.string,
  mountAllTabContents: _propTypes2.default.bool,
  theme: _propTypes2.default.oneOf(['tab', 'underline']),
  color: _propTypes2.default.oneOf(backgroundColors)
};

Tabs.defaultProps = {
  className: null,
  mountAllTabContents: false,
  theme: 'tab',
  color: _colors2.default.white
};

exports.Tab = Tab;
exports.Tabs = Tabs;
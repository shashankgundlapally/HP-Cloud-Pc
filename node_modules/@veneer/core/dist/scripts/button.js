'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = require('./icon');

var _icon2 = _interopRequireDefault(_icon);

require('../css/button.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var Button = function Button(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === undefined ? false : _ref$disabled,
      _ref$expanded = _ref.expanded,
      expanded = _ref$expanded === undefined ? false : _ref$expanded,
      _ref$loading = _ref.loading,
      loading = _ref$loading === undefined ? false : _ref$loading,
      name = _ref.name,
      appearance = _ref.appearance,
      props = _objectWithoutProperties(_ref, ['className', 'children', 'disabled', 'expanded', 'loading', 'name', 'appearance']);

  var styles = {
    secondary: 'vn-button--secondary',
    critical: 'vn-button--critical'
  };

  var styleClass = styles[appearance];
  var buttonClasses = { 'vn-button': true };
  buttonClasses[styleClass] = typeof appearance !== 'undefined';
  buttonClasses['vn-button--expanded'] = expanded;
  buttonClasses['vn-button--loading'] = loading;

  if (className) {
    buttonClasses[className] = true;
  }

  var icon = '';
  if (loading) {
    icon = _react2.default.createElement(_icon2.default, { className: 'vn-icon--loading', name: 'loading', size: 24, color: 'gray' });
  }

  return _react2.default.createElement(
    'button',
    _extends({
      id: name
    }, props, {
      className: (0, _classnames2.default)(buttonClasses),
      disabled: disabled || loading
    }),
    children,
    icon
  );
};

Button.propTypes = {
  appearance: _propTypes2.default.oneOf(['secondary', 'critical']),
  children: _propTypes2.default.node.isRequired,
  className: _propTypes2.default.string,
  disabled: _propTypes2.default.bool,
  expanded: _propTypes2.default.bool,
  loading: _propTypes2.default.bool,
  name: _propTypes2.default.string,
  onClick: _propTypes2.default.func,
  type: _propTypes2.default.oneOf(['submit', 'reset', 'button'])
};

Button.defaultProps = {
  appearance: undefined,
  className: undefined,
  disabled: false,
  expanded: false,
  loading: false,
  name: '',
  onClick: function onClick() {},
  type: 'button'
};

Button.displayName = 'Button';

exports.default = Button;
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _arrayFrom = require('array-from');

var _arrayFrom2 = _interopRequireDefault(_arrayFrom);

var _objectIs = require('object-is');

var _objectIs2 = _interopRequireDefault(_objectIs);

var _reactDates = require('react-dates');

var _button = require('./button');

var _button2 = _interopRequireDefault(_button);

var _icon = require('./icon');

var _icon2 = _interopRequireDefault(_icon);

require('../css/datepicker.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global window */


if (!Array.from) Array.from = _arrayFrom2.default;
if (!Object.is) Object.is = _objectIs2.default;

var DatePicker = function (_React$Component) {
  _inherits(DatePicker, _React$Component);

  function DatePicker(props) {
    _classCallCheck(this, DatePicker);

    var _this = _possibleConstructorReturn(this, (DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).call(this, props));

    _this.componentDidMount = function () {
      window.addEventListener('click', _this.handleWindowClick);
    };

    _this.componentWillUnmount = function () {
      window.removeEventListener('click', _this.handleWindowClick);
    };

    _this.handleWindowClick = function (event) {
      if (!_this.state.focused) return;
      if (_this.node.contains(event.target)) return;
      _this.setState({
        focused: false
      });
    };

    _this.handleClick = function () {
      if (_this.props.disabled) return;
      _this.setState({
        focused: !_this.state.focused
      });
    };

    _this.todayHandleClick = function () {
      var today = (0, _moment2.default)();
      _this.setState({
        focused: !_this.state.focused,
        value: today
      }, function () {
        return _this.props.onChange(_this.state.value);
      });
    };

    _this.state = {
      value: props.value,
      localization: props.localization,
      error: props.error
    };
    _this.handleOnChange = _this.handleOnChange.bind(_this);
    _this.onFocusChange = _this.onFocusChange.bind(_this);
    _this.onKeyDown = _this.onKeyDown.bind(_this);
    return _this;
  }

  _createClass(DatePicker, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        value: nextProps.value,
        focused: nextProps.focused,
        localization: nextProps.localization,
        error: nextProps.error
      });
    }
  }, {
    key: 'onFocusChange',
    value: function onFocusChange(_ref) {
      var focused = _ref.focused;

      this.setState({ focused: focused });
    }
  }, {
    key: 'onKeyDown',
    value: function onKeyDown(event) {
      switch (event.keyCode) {
        case 13:
          // ENTER
          this.setState({
            focused: true
          });
          break;
        case 27:
          // ESC
          this.setState({
            focused: false
          });
          event.preventDefault();
          break;
        default:
          break;
      }
    }
  }, {
    key: 'handleOnChange',
    value: function handleOnChange(value) {
      var _this2 = this;

      this.setState({
        value: value
      }, function () {
        return _this2.props.onChange(_this2.state.value);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      _moment2.default.locale(this.state.localization);
      var date = this.state.value ? (0, _moment2.default)(this.state.value) : null;

      var _props = this.props,
          disabled = _props.disabled,
          enableOutsideDays = _props.enableOutsideDays,
          error = _props.error,
          focused = _props.focused,
          i18n = _props.i18n,
          localization = _props.localization,
          onChange = _props.onChange,
          placeholder = _props.placeholder,
          value = _props.value,
          otherProps = _objectWithoutProperties(_props, ['disabled', 'enableOutsideDays', 'error', 'focused', 'i18n', 'localization', 'onChange', 'placeholder', 'value']);

      var classes = {
        'vn-datepicker__input': true,
        'vn-datepicker__input--open': this.state.focused,
        'vn-datepicker__input--error': this.state.error
      };

      var iconClasses = {
        'vn-datepicker__icon': true,
        'vn-icon--disabled': disabled
      };

      var divClasses = {
        'vn-datepicker': true,
        'vn-datepicker--error': this.state.error
      };

      var dateString = date ? (0, _moment2.default)(date).format('MMMM D, YYYY') : '';
      var today = [(0, _moment2.default)()];
      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)(divClasses), ref: function ref(node) {
            _this3.node = node;
          } },
        _react2.default.createElement('input', _extends({}, otherProps, {
          className: (0, _classnames2.default)(classes),
          onClick: this.handleClick,
          onKeyDown: this.onKeyDown,
          value: dateString,
          placeholder: placeholder,
          readOnly: true,
          disabled: disabled
        })),
        _react2.default.createElement(_icon2.default, {
          name: 'calendar',
          className: (0, _classnames2.default)(iconClasses),
          onClick: this.handleClick,
          size: 16
        }),
        this.state.focused && _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            'ul',
            { className: 'vn-datepicker__calendar' },
            _react2.default.createElement(_reactDates.DayPickerSingleDateController, _extends({}, otherProps, {
              date: date,
              numberOfMonths: 1,
              focused: true,
              isDayHighlighted: function isDayHighlighted(day) {
                return today.some(function (day2) {
                  return (0, _reactDates.isSameDay)(day, day2);
                });
              },
              onDateChange: this.handleOnChange,
              onFocusChange: this.onFocusChange,
              enableOutsideDays: enableOutsideDays,
              daySize: 30,
              navNext: _react2.default.createElement(_icon2.default, { name: 'arrow', color: 'white', size: 16 }),
              navPrev: _react2.default.createElement(_icon2.default, { name: 'arrow', color: 'white', size: 16 }),
              hideKeyboardShortcutsPanel: true
            })),
            _react2.default.createElement(
              _button2.default,
              { name: 'button', className: 'vn-datepicker__button', onClick: this.todayHandleClick, appearance: 'secondary' },
              i18n.today
            )
          )
        )
      );
    }
  }]);

  return DatePicker;
}(_react2.default.Component);

DatePicker.propTypes = {
  focused: _propTypes2.default.bool,
  value: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(Date), _propTypes2.default.string]),
  localization: _propTypes2.default.string,
  disabled: _propTypes2.default.bool,
  placeholder: _propTypes2.default.string,
  enableOutsideDays: _propTypes2.default.bool,
  error: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  i18n: _propTypes2.default.shape({
    today: _propTypes2.default.string.isRequired
  })
};

DatePicker.defaultProps = {
  focused: false,
  value: null,
  localization: 'en',
  disabled: false,
  placeholder: '',
  enableOutsideDays: false,
  error: false,
  onChange: function onChange() {},
  i18n: {
    today: 'Today'
  }
};

DatePicker.displayName = 'DatePicker';

exports.default = DatePicker;
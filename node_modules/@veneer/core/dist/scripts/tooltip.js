'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _popover = require('./popover');

var _popover2 = _interopRequireDefault(_popover);

require('../css/tooltip.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var Content = function Content(_ref) {
  var content = _ref.content;
  return _react2.default.createElement(
    'span',
    null,
    _react2.default.createElement(
      'div',
      { className: 'vn-tooltip__content' },
      content
    )
  );
};

Content.propTypes = {
  content: _propTypes2.default.node.isRequired
};

var Tooltip = function Tooltip(_ref2) {
  var children = _ref2.children,
      content = _ref2.content,
      otherProps = _objectWithoutProperties(_ref2, ['children', 'content']);

  return _react2.default.createElement(
    _popover2.default,
    _extends({}, otherProps, {
      arrow: true,
      className: 'vn-tooltip',
      content: _react2.default.createElement(Content, { content: content }),
      interactionType: 'hover',
      targetClassName: 'vn-tooltip__target'
    }),
    children
  );
};

Tooltip.propTypes = {
  alignment: _propTypes2.default.oneOf(['top', 'right', 'bottom', 'left', 'middle']),
  children: _propTypes2.default.node.isRequired,
  content: _propTypes2.default.node.isRequired,
  contentHideDelayOnHover: _propTypes2.default.number,
  contentShowDelayOnHover: _propTypes2.default.number,
  position: _propTypes2.default.oneOf(['up', 'right', 'down', 'left'])
};

Tooltip.defaultProps = {
  alignment: 'left',
  contentHideDelayOnHover: 300,
  contentShowDelayOnHover: 0,
  position: 'down'
};

Tooltip.displayName = 'Tooltip';

exports.default = Tooltip;
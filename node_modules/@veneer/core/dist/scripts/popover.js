'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('../css/popover.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global window */


var Popover = function (_React$Component) {
  _inherits(Popover, _React$Component);

  function Popover(props) {
    _classCallCheck(this, Popover);

    var _this = _possibleConstructorReturn(this, (Popover.__proto__ || Object.getPrototypeOf(Popover)).call(this, props));

    _this.componentDidUpdate = function () {
      if (_this.state.isContentVisible) {
        window.addEventListener('click', _this.handleWindowClick);
        window.addEventListener('keydown', _this.handleWindowKeyDown);
      } else {
        window.removeEventListener('click', _this.handleWindowClick);
        window.removeEventListener('keydown', _this.handleWindowKeyDown);
      }
    };

    _this.componentWillUnmount = function () {
      window.removeEventListener('click', _this.handleWindowClick);
      window.removeEventListener('keydown', _this.handleWindowKeyDown);
    };

    _this.handleWindowClick = function (event) {
      event.preventDefault();
      event.stopPropagation();
      _this.toggleContent();
    };

    _this.handleWindowKeyDown = function (event) {
      switch (event.keyCode) {
        case 27:
          // ESC
          _this.changeState(false, _this.props.contentHideDelayOnHover);
          event.preventDefault();
          break;
        case 32: // SPACE
        case 13:
          // ENTER
          event.preventDefault();
          event.stopPropagation();
          _this.toggleContent();
          break;
        default:
          break;
      }
    };

    _this.toggleContent = function () {
      _this.setState({
        isContentVisible: !_this.state.isContentVisible
      });
    };

    _this.changeState = function (isContentVisible) {
      var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      var changeState = function changeState() {
        return _this.setState({ isContentVisible: isContentVisible });
      };
      if (timeout > 0) {
        setTimeout(changeState, timeout);
      } else {
        changeState();
      }
    };

    _this.handleLinkClick = function (event) {
      var isContentVisible = _this.state.isContentVisible;

      event.persist();
      event.preventDefault();
      event.stopPropagation();
      _this.changeState(!isContentVisible);
      _this.props.onClick(event);
    };

    _this.handleLinkKeyDown = function (event) {
      switch (event.keyCode) {
        case 27:
          // ESC
          _this.changeState(false, _this.props.contentHideDelayOnHover);
          event.preventDefault();
          break;
        default:
          break;
      }
    };

    _this.handleLinkMouseEnter = function (event) {
      event.preventDefault();
      _this.changeState(true, _this.props.contentShowDelayOnHover);
    };

    _this.handleLinkMouseLeave = function (event) {
      event.preventDefault();
      _this.changeState(false, _this.props.contentHideDelayOnHover);
    };

    _this.handlers = function () {
      switch (_this.props.interactionType) {
        case 'click':
          return {
            onClick: _this.handleLinkClick,
            onKeyDown: _this.handleLinkKeyDown
          };
        case 'hover':
          return {
            onClick: _this.handleLinkClick,
            onKeyDown: _this.handleLinkKeyDown,
            onMouseEnter: _this.handleLinkMouseEnter,
            onMouseLeave: _this.handleLinkMouseLeave
          };
        default:
          return {};
      }
    };

    _this.validateAlignment = function (position, alignment) {
      var invalidCombinations = {
        up: ['top', 'bottom'],
        down: ['top', 'bottom'],
        right: ['right', 'left'],
        left: ['right', 'left']
      };
      var invalidAlignments = invalidCombinations[position];
      if (invalidAlignments && invalidAlignments.includes(alignment)) {
        return 'middle';
      }
      return alignment;
    };

    _this.render = function () {
      var _classNames2, _classNames3;

      var _this$props = _this.props,
          alignment = _this$props.alignment,
          arrow = _this$props.arrow,
          children = _this$props.children,
          className = _this$props.className,
          content = _this$props.content,
          contentClassName = _this$props.contentClassName,
          position = _this$props.position,
          targetClassName = _this$props.targetClassName;
      var isContentVisible = _this.state.isContentVisible;


      var classes = (0, _classnames2.default)(_defineProperty({
        'vn-popover': true
      }, className, className != null));

      var targetClasses = (0, _classnames2.default)((_classNames2 = {
        'vn-popover__target': true,
        'vn-popover__target--arrow': arrow,
        'vn-popover__target--visible': isContentVisible
      }, _defineProperty(_classNames2, 'vn-popover__target--' + position, true), _defineProperty(_classNames2, targetClassName, targetClassName != null), _classNames2));

      var validatedAlignment = _this.validateAlignment(position, alignment);
      var contentClasses = (0, _classnames2.default)((_classNames3 = {
        'vn-popover__content': true,
        'vn-popover__content--visible': isContentVisible
      }, _defineProperty(_classNames3, 'vn-popover__content--' + position, true), _defineProperty(_classNames3, 'vn-popover__content--' + validatedAlignment + '-aligned', !arrow), _defineProperty(_classNames3, 'vn-popover__content--with-arrow-' + validatedAlignment + '-aligned', arrow), _defineProperty(_classNames3, contentClassName, contentClassName != null), _classNames3));

      return _react2.default.createElement(
        'div',
        { className: classes },
        _react2.default.createElement(
          'a',
          _extends({
            className: targetClasses
          }, _this.handlers(), {
            role: 'menu',
            tabIndex: 0
          }),
          children
        ),
        _react2.default.createElement(
          'div',
          { className: contentClasses },
          content
        )
      );
    };

    _this.state = {
      isContentVisible: false
    };
    return _this;
  }

  return Popover;
}(_react2.default.Component);

Popover.alignmentOptions = ['top', 'right', 'bottom', 'left', 'middle'];
Popover.positionOptions = ['up', 'right', 'down', 'left'];

Popover.propTypes = {
  alignment: _propTypes2.default.oneOf(Popover.alignmentOptions),
  arrow: _propTypes2.default.bool,
  children: _propTypes2.default.node.isRequired,
  className: _propTypes2.default.string,
  content: _propTypes2.default.node.isRequired,
  contentClassName: _propTypes2.default.string,
  contentHideDelayOnHover: _propTypes2.default.number,
  contentShowDelayOnHover: _propTypes2.default.number,
  interactionType: _propTypes2.default.oneOf(['click', 'hover']),
  onClick: _propTypes2.default.func,
  position: _propTypes2.default.oneOf(Popover.positionOptions),
  targetClassName: _propTypes2.default.string
};

Popover.defaultProps = {
  alignment: 'left',
  arrow: false,
  className: null,
  contentClassName: null,
  contentHideDelayOnHover: 0,
  contentShowDelayOnHover: 0,
  interactionType: 'click',
  onClick: function onClick() {},
  position: 'down',
  targetClassName: null
};

Popover.displayName = 'Popover';

exports.default = Popover;
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactTransitionGroup = require('react-transition-group');

require('../css/toast_notification.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToastNotification = function (_React$Component) {
  _inherits(ToastNotification, _React$Component);

  function ToastNotification(props) {
    _classCallCheck(this, ToastNotification);

    var _this = _possibleConstructorReturn(this, (ToastNotification.__proto__ || Object.getPrototypeOf(ToastNotification)).call(this, props));

    _this.componentWillMount = function () {
      _this.setState({
        timeout: setTimeout(function () {
          _this.closeToast();
        }, _this.props.timeout * 1000)
      });
    };

    _this.componentWillUnmount = function () {
      clearTimeout(_this.state.timeout);
    };

    _this.closeToast = function () {
      _this.setState({
        show: false
      }, _this.props.onClose(_this.props.id));
    };

    _this.handleMouseOver = function () {
      clearTimeout(_this.state.timeout);
    };

    _this.handleMouseOut = function () {
      if (_this.state.show) {
        _this.setState({
          timeout: setTimeout(function () {
            _this.closeToast();
          }, _this.props.timeout * 1000)
        });
      }
    };

    _this.state = {
      show: true,
      timeout: null
    };
    return _this;
  }

  _createClass(ToastNotification, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          i18n = _props.i18n,
          id = _props.id,
          text = _props.text,
          type = _props.type,
          onClose = _props.onClose,
          otherProps = _objectWithoutProperties(_props, ['i18n', 'id', 'text', 'type', 'onClose']);

      var typeClassName = 'vn-toast__type vn-toast__type--' + type;

      return _react2.default.createElement(
        _reactTransitionGroup.CSSTransition,
        _extends({}, otherProps, { 'in': this.state.show, unmountOnExit: true, classNames: 'vn-toast', timeout: 500 }),
        _react2.default.createElement(
          'div',
          { className: 'vn-toast', onMouseOver: this.handleMouseOver, onMouseOut: this.handleMouseOut },
          _react2.default.createElement('div', { className: typeClassName }),
          _react2.default.createElement(
            'p',
            { className: 'vn-toast__text' },
            text
          ),
          _react2.default.createElement(
            'button',
            { className: 'vn-toast__close', onClick: this.closeToast },
            i18n.close
          )
        )
      );
    }
  }]);

  return ToastNotification;
}(_react2.default.Component);

ToastNotification.propTypes = {
  i18n: _propTypes2.default.shape({
    close: _propTypes2.default.string
  }),
  id: _propTypes2.default.number.isRequired,
  onClose: _propTypes2.default.func,
  text: _propTypes2.default.string.isRequired,
  timeout: _propTypes2.default.number,
  type: _propTypes2.default.oneOf(['positive', 'negative', 'informative']).isRequired
};

ToastNotification.defaultProps = {
  i18n: {
    close: 'close'
  },
  onClose: function onClose() {},
  timeout: 5
};

ToastNotification.displayName = 'ToastNotification';

exports.default = ToastNotification;
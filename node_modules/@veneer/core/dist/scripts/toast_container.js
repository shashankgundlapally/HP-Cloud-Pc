'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactTransitionGroup = require('react-transition-group');

var _toast_notification = require('./toast_notification');

var _toast_notification2 = _interopRequireDefault(_toast_notification);

require('../css/toast_container.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ToastContainer = function ToastContainer(_ref) {
  var children = _ref.children,
      newOnTop = _ref.newOnTop,
      position = _ref.position;
  return _react2.default.createElement(
    _reactTransitionGroup.TransitionGroup,
    { className: 'vn-toast-container vn-toast-container--' + position },
    newOnTop ? _react2.default.Children.toArray(children).reverse() : children
  );
};

ToastContainer.propTypes = {
  position: _propTypes2.default.oneOf(['bottom', 'top']),
  children: _propTypes2.default.arrayOf(function (props, propName, componentName) {
    var prop = props[propName];
    if (prop && _toast_notification2.default !== prop.type) {
      return new Error('Invalid prop `children` of type `' + prop.type.displayName + '`\n        supplied to `' + componentName + '`, expected an array of `ToastNotification`.');
    }
    return undefined;
  }),
  newOnTop: _propTypes2.default.bool
};

ToastContainer.defaultProps = {
  position: 'bottom',
  children: [],
  newOnTop: true
};

ToastContainer.displayName = 'ToastContainer';

exports.default = ToastContainer;
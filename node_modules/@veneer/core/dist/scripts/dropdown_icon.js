'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropdownIconAction = exports.DropdownIcon = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _icon_button = require('./icon_button');

var _icon_button2 = _interopRequireDefault(_icon_button);

var _popover = require('./popover');

var _popover2 = _interopRequireDefault(_popover);

var _menu = require('./menu');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var DropdownIconAction = function DropdownIconAction(props) {
  return _react2.default.createElement(_menu.MenuItem, props);
};

DropdownIconAction.propTypes = {
  disabled: _propTypes2.default.bool,
  href: _propTypes2.default.string,
  icon: _propTypes2.default.string,
  label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired,
  onClick: _propTypes2.default.func
};

DropdownIconAction.defaultProps = {
  disabled: false,
  href: null,
  icon: null,
  onClick: function onClick() {}
};

DropdownIconAction.displayName = 'DropdownIconAction';

var DropdownIcon = function DropdownIcon(_ref) {
  var children = _ref.children,
      popoverAlignment = _ref.popoverAlignment,
      popoverPosition = _ref.popoverPosition,
      otherProps = _objectWithoutProperties(_ref, ['children', 'popoverAlignment', 'popoverPosition']);

  if (otherProps.disabled || otherProps.loading) {
    return _react2.default.createElement(_icon_button2.default, otherProps);
  }
  var actions = _react2.default.createElement(
    _menu.Menu,
    null,
    _react2.default.Children.map(children, function (item) {
      return _react2.default.createElement(DropdownIconAction, item.props);
    })
  );
  return _react2.default.createElement(
    _popover2.default,
    { alignment: popoverAlignment, content: actions, position: popoverPosition },
    _react2.default.createElement(_icon_button2.default, otherProps)
  );
};

DropdownIcon.propTypes = {
  children: _propTypes2.default.node.isRequired,
  className: _propTypes2.default.string,
  disabled: _propTypes2.default.bool,
  icon: _propTypes2.default.string.isRequired,
  loading: _propTypes2.default.bool,
  popoverAlignment: _propTypes2.default.oneOf(_popover2.default.alignmentOptions),
  popoverPosition: _propTypes2.default.oneOf(_popover2.default.positionOptions)
};

DropdownIcon.defaultProps = {
  className: undefined,
  disabled: false,
  loading: false,
  popoverAlignment: 'left',
  popoverPosition: 'down'
};

DropdownIcon.displayName = 'DropdownIcon';

exports.DropdownIcon = DropdownIcon;
exports.DropdownIconAction = DropdownIconAction;
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _reactScroll = require('react-scroll');

var _reactScroll2 = _interopRequireDefault(_reactScroll);

var _shortid = require('shortid');

var _shortid2 = _interopRequireDefault(_shortid);

require('../css/anchor_menu.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Link = _reactScroll2.default.Link;

var AnchorMenuItem = function (_Component) {
  _inherits(AnchorMenuItem, _Component);

  function AnchorMenuItem() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, AnchorMenuItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AnchorMenuItem.__proto__ || Object.getPrototypeOf(AnchorMenuItem)).call.apply(_ref, [this].concat(args))), _this), _this.setSelectedItem = function () {
      _this.props.selectItem(_this);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(AnchorMenuItem, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          label = _props.label,
          level = _props.level,
          selected = _props.selected,
          anchorTo = _props.anchorTo,
          selectItem = _props.selectItem,
          offset = _props.offset,
          other = _objectWithoutProperties(_props, ['children', 'label', 'level', 'selected', 'anchorTo', 'selectItem', 'offset']);

      var itemClasses = (0, _classnames2.default)({
        'vn-anchor-menu__item': true
      });

      var linkClasses = (0, _classnames2.default)({
        'vn-anchor-menu__item-link': true,
        'vn-anchor-menu__item-link--selected': selected
      });

      var linkStyle = { paddingLeft: (level === 0 ? 0 : level * 25) + 'px' };

      return _react2.default.createElement(
        'li',
        _extends({}, other, { className: itemClasses }),
        _react2.default.createElement(
          Link,
          {
            className: linkClasses,
            to: anchorTo,
            spy: true,
            smooth: true,
            duration: 500,
            tabIndex: 0,
            style: linkStyle,
            onClick: this.setSelectedItem,
            onSetActive: this.setSelectedItem,
            offset: offset
          },
          label
        ),
        children != null && _react2.default.createElement(
          'ul',
          null,
          _react2.default.Children.toArray(children).map(function (item) {
            return _react2.default.createElement(
              AnchorMenuItem,
              _extends({}, item.props, {
                key: _shortid2.default.generate(),
                level: level + 1,
                selectItem: selectItem
              }),
              item.props.children
            );
          })
        )
      );
    }
  }]);

  return AnchorMenuItem;
}(_react.Component);

AnchorMenuItem.propTypes = {
  children: _propTypes2.default.node,
  style: _propTypes2.default.object, // eslint-disable-line react/forbid-prop-types
  label: _propTypes2.default.string.isRequired,
  level: _propTypes2.default.number,
  selected: _propTypes2.default.bool,
  anchorTo: _propTypes2.default.string.isRequired,
  selectItem: _propTypes2.default.func,
  offset: _propTypes2.default.number
};

AnchorMenuItem.defaultProps = {
  children: null,
  style: undefined,
  level: 0,
  selected: false,
  anchorTo: null,
  selectItem: undefined,
  offset: 0
};

AnchorMenuItem.displayName = 'AnchorMenuItem';

exports.default = AnchorMenuItem;
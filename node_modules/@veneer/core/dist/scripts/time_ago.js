'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.i18nDefaultProps = exports.i18nPropTypes = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var i18nPropTypes = _propTypes2.default.shape({
  now: _propTypes2.default.string.isRequired,
  second: _propTypes2.default.string.isRequired,
  seconds: _propTypes2.default.string.isRequired,
  minute: _propTypes2.default.string.isRequired,
  minutes: _propTypes2.default.string.isRequired,
  hour: _propTypes2.default.string.isRequired,
  hours: _propTypes2.default.string.isRequired,
  day: _propTypes2.default.string.isRequired,
  days: _propTypes2.default.string.isRequired,
  week: _propTypes2.default.string.isRequired,
  weeks: _propTypes2.default.string.isRequired,
  month: _propTypes2.default.string.isRequired,
  months: _propTypes2.default.string.isRequired,
  year: _propTypes2.default.string.isRequired,
  years: _propTypes2.default.string.isRequired
});

var i18nDefaultProps = {
  now: 'just now',
  second: '1 second ago',
  seconds: '%s seconds ago',
  minute: '1 minute ago',
  minutes: '%s minutes ago',
  hour: '1 hour ago',
  hours: '%s hours ago',
  day: '1 day ago',
  days: '%s days ago',
  week: '1 week ago',
  weeks: '%s weeks ago',
  month: '1 month ago',
  months: '%s months ago',
  year: '1 year ago',
  years: '%s years ago'
};

var SECOND = 1000;
var MINUTE = 60 * SECOND;
var HOUR = 60 * MINUTE;
var DAY = 24 * HOUR;
var WEEK = 7 * DAY;
var MONTH = 30 * DAY;
var YEAR = 12 * MONTH;

var ranges = [{ limit: SECOND, key: 'now' }, { limit: 2 * SECOND, key: 'second' }, { limit: MINUTE, key: 'seconds', unit: SECOND }, { limit: 2 * MINUTE, key: 'minute' }, { limit: HOUR, key: 'minutes', unit: MINUTE }, { limit: 2 * HOUR, key: 'hour' }, { limit: DAY, key: 'hours', unit: HOUR }, { limit: 2 * DAY, key: 'day' }, { limit: WEEK, key: 'days', unit: DAY }, { limit: 2 * WEEK, key: 'week' }, { limit: MONTH, key: 'weeks', unit: WEEK }, { limit: 2 * MONTH, key: 'month' }, { limit: YEAR, key: 'months', unit: MONTH }, { limit: 2 * YEAR, key: 'year' }, { limit: Number.MAX_SAFE_INTEGER, key: 'years', unit: YEAR }];

var getMessage = function getMessage(time, i18n) {
  var y = void 0;
  var timeDiff = new Date() - time;
  ranges.forEach(function (range, i) {
    if (!y) {
      var lowerLimit = i === 0 ? 0 : ranges[i - 1].limit;
      var upperLimit = range.limit;
      if (timeDiff > lowerLimit && timeDiff <= upperLimit) {
        if (range.unit) {
          y = i18n[range.key].replace('%s', Math.round(timeDiff / range.unit));
        } else {
          y = i18n[range.key];
        }
      }
    }
  });
  return y;
};

var TimeAgo = function TimeAgo(_ref) {
  var i18n = _ref.i18n,
      time = _ref.time;
  return _react2.default.createElement(
    'span',
    null,
    getMessage(time, i18n)
  );
};

TimeAgo.propTypes = {
  i18n: i18nPropTypes,
  time: _propTypes2.default.instanceOf(Date).isRequired
};

TimeAgo.defaultProps = {
  i18n: i18nDefaultProps
};

TimeAgo.displayName = 'TimeAgo';

exports.default = TimeAgo;
exports.i18nPropTypes = i18nPropTypes;
exports.i18nDefaultProps = i18nDefaultProps;
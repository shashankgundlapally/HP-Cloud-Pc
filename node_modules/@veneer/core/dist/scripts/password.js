'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('../css/password.css');

var _icon = require('./icon');

var _icon2 = _interopRequireDefault(_icon);

var _textbox = require('./textbox');

var _textbox2 = _interopRequireDefault(_textbox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Password = function (_Component) {
  _inherits(Password, _Component);

  function Password(props) {
    _classCallCheck(this, Password);

    var _this = _possibleConstructorReturn(this, (Password.__proto__ || Object.getPrototypeOf(Password)).call(this, props));

    _this.handleMouseDown = function (e) {
      // prevent password component from losing focus on border when clicking on eye icon
      e.preventDefault();
    };

    _this.handleClick = function () {
      if (_this.props.disabled) return;
      _this.setState({
        showPassword: !_this.state.showPassword
      });

      _this.textBox.focus();
    };

    _this.state = {
      showPassword: false,
      isFocused: false
    };
    return _this;
  }

  _createClass(Password, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _state = this.state,
          showPassword = _state.showPassword,
          isFocused = _state.isFocused;


      var classes = {
        'vn-textbox--focused': isFocused,
        'vn-password__input': true
      };

      var iconClasses = {
        'vn-password__icon': true,
        'vn-icon--disabled': this.props.disabled
      };

      return _react2.default.createElement(
        'div',
        { id: 'passwordContainer', className: 'vn-password' },
        _react2.default.createElement(_textbox2.default, _extends({}, this.props, {
          ref: function ref(c) {
            _this2.textBox = c;
          },
          type: showPassword ? 'text' : 'password',
          className: (0, _classnames2.default)(classes)
        })),
        _react2.default.createElement(_icon2.default, {
          key: showPassword ? 'hide' : 'show',
          name: showPassword ? 'hide' : 'show',
          className: (0, _classnames2.default)(iconClasses),
          onClick: this.handleClick,
          onMouseDown: this.handleMouseDown
        })
      );
    }
  }]);

  return Password;
}(_react.Component);

Password.propTypes = {
  disabled: _propTypes2.default.bool
};

Password.defaultProps = {
  disabled: false
};

Password.displayName = 'Password';

exports.default = Password;
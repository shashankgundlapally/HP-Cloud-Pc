'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropdownMenuItem = exports.DropdownMenu = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _icon = require('./icon');

var _icon2 = _interopRequireDefault(_icon);

require('../css/dropdownmenu.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var DropdownMenu = function DropdownMenu(_ref) {
  var items = _ref.items,
      props = _objectWithoutProperties(_ref, ['items']);

  var renderedItems = items.map(function (item) {
    return _react2.default.createElement(DropdownMenuItem, _extends({}, item, { key: item.label }));
  }, undefined);

  return _react2.default.createElement(
    'ul',
    _extends({ className: 'vn-dropdown-menu' }, props),
    renderedItems
  );
};

DropdownMenu.propTypes = {
  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    disabled: _propTypes2.default.bool,
    icon: _propTypes2.default.string,
    label: _propTypes2.default.string,
    url: _propTypes2.default.string
  }))
};

DropdownMenu.defaultProps = {
  items: []
};

DropdownMenu.displayName = 'DropdownMenu';

/*---------------------------------------------------------------------------------*/

var DropdownMenuItem = function DropdownMenuItem(_ref2) {
  var disabled = _ref2.disabled,
      icon = _ref2.icon,
      label = _ref2.label,
      onClick = _ref2.onClick,
      url = _ref2.url;

  var handleClick = function handleClick(event) {
    if (disabled) {
      event.preventDefault();
      return;
    }
    onClick(event);
  };

  var menuItemClasses = (0, _classnames2.default)({
    'vn-dropdown-menu__item': true,
    'vn-dropdown-menu__item--disabled': disabled
  });

  var menuLinkClasses = (0, _classnames2.default)({
    'vn-dropdown-menu__link': true,
    'vn-dropdown-menu__link--disabled': disabled
  });

  var renderedIcon = void 0;
  if (icon) {
    renderedIcon = _react2.default.createElement(_icon2.default, { name: icon, className: 'vn-dropdown-menu__icon' });
  }

  return _react2.default.createElement(
    'li',
    { className: menuItemClasses, key: label },
    _react2.default.createElement(
      'a',
      { href: url, className: menuLinkClasses, onClick: handleClick },
      renderedIcon,
      _react2.default.createElement(
        'span',
        { className: 'vn-dropdown-menu__label' },
        label
      )
    )
  );
};

DropdownMenuItem.propTypes = {
  disabled: _propTypes2.default.bool,
  icon: _propTypes2.default.string,
  label: _propTypes2.default.string.isRequired,
  onClick: _propTypes2.default.func,
  url: _propTypes2.default.string
};

DropdownMenuItem.defaultProps = {
  disabled: false,
  icon: '',
  onClick: function onClick() {},
  url: '#'
};

DropdownMenuItem.displayName = 'DropdownMenuItem';

exports.DropdownMenu = DropdownMenu;
exports.DropdownMenuItem = DropdownMenuItem;
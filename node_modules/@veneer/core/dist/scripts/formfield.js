'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('../css/formfield.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var FormField = function FormField(_ref) {
  var children = _ref.children,
      className = _ref.className,
      errorMessage = _ref.errorMessage,
      label = _ref.label,
      required = _ref.required,
      tip = _ref.tip,
      disabled = _ref.disabled,
      props = _objectWithoutProperties(_ref, ['children', 'className', 'errorMessage', 'label', 'required', 'tip', 'disabled']);

  var htmlFor = void 0;

  var classes = {
    'vn-form-field': true
  };

  var labelClasses = {
    'vn-form-field__label': true,
    'vn-form-field__label--disabled': disabled
  };

  var newChildren = _react2.default.Children.map(children, function (child) {
    return _react2.default.cloneElement(child, { disabled: disabled });
  });

  if (className) {
    classes[className] = className;
  }

  var requiredMarkup = void 0;
  if (!disabled && required) {
    requiredMarkup = _react2.default.createElement(
      'span',
      { className: 'vn-form-field__required' },
      '*'
    );
  }

  var tipMarkup = void 0;
  if (tip) {
    tipMarkup = _react2.default.createElement(
      'span',
      { className: 'vn-form-field__tip' },
      tip
    );
  }

  return _react2.default.createElement(
    'div',
    _extends({ className: (0, _classnames2.default)(classes) }, props),
    _react2.default.createElement(
      'label',
      { className: (0, _classnames2.default)(labelClasses), htmlFor: htmlFor },
      label,
      requiredMarkup,
      tipMarkup
    ),
    newChildren,
    _react2.default.createElement(
      'p',
      { className: 'vn-form-field__error-message' },
      errorMessage
    )
  );
};

FormField.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node.isRequired,
  disabled: _propTypes2.default.bool,
  errorMessage: _propTypes2.default.string,
  label: _propTypes2.default.string,
  required: _propTypes2.default.bool,
  tip: _propTypes2.default.string
};

FormField.defaultProps = {
  className: '',
  disabled: false,
  errorMessage: '',
  label: '',
  required: false,
  tip: null
};

FormField.displayName = 'FormField';

exports.default = FormField;